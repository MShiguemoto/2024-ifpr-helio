----------------------------------------------------------------------- 22/02/2024 --------------------------------------------------------------------------------------------------
----------------------------------------------------------------------- Modificadores de classes ------------------------------------------------------------------------------------

----------------------------------------------------------------------- Anotações ---------------------------------------------------------------------------------------------------
[Definição] A declaração de objetos em dart é feita sem o uso do "new".
[Construtor] var obj = MinhaClasse();   /*Esse é o padrão de uso em DART, para declaração de objeto *com referência* */

[Definição] A declaração de objetos em dart pode ser feita sem o uso de referência do objeto.
[Construtor] MinhaClasse();   /*Diretamente, sem referência*/

[Definição] A declaração de variáveis não obrigatórias é feita dentro de colchetes, com um valor padrão. [int y = 0]
[Assinaturas de métodos e construtores]  MinhaClasse(int x, [int y = 0]) { }

[Definição] É possivel fazer a atribuição de um valor à um atributo da classe através do construtor da classe, declarando diretamente o atributo na assinatura da classe.
[Assinatura de contrutores] MinhaClasse(this.x, this.y) -> Recebe os dois valores e já atribui as variáveis x e y da classe.

[Definição] É possível obrigar a declaração de qual parte da assinatura do construtor está sendo enviada e, com isso, abrir a possibilidade de informar as variáveis fora de ordem.
[Assinatura de construtores] MinhaClasse({required this.x, required this.y}) -> "Required" obriga a declarar as assinaturas ao construir o objeto.
[Assinatura de construtores] MinhaClasse(x: 3, y: 0);   ou MinhaClasse(y: 3, x: 0); -> trocando a ordem dos parâmetros

[Definição] A declaração de atributos privados não é necessário declarar o modificador de acesso, é possível criar um atribruto private utilizando "_" (underline) em sua declaração 
[Declaração de variável]   private int x;  é igual a   int _x;    /* Por padrão, um atributo é public */


----------------------------------------------------------------------- Anotações ----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------- Atividades ---------------------------------------------------------------------------------------------------
Criar as seguintes classes: 
  >> Todos com parâmetros nomeados no construtor
  Estado{id,nome,sigla}
  Cidade{id,nome,Estado}
  Cliente{id,nome,Cidade -trabalho, Cidade -moradia}
  Fornecedor{id,nome,Cidade -trabalho, Cidade -moradia}
  Venda{id, Cliente, Fornecedor, Função - cálculo comissão}


```
class Estado {
  int id;
  String nome;
  String sigla;
  Estado({required this.id,required this.nome,required this.sigla});
}

class Cidade {
  int id;
  String nome;
  Estado estado;
  Cidade({required this.id,required this.nome,required this.estado});
}

class Cliente {
  int id;
  String nome;
  Cidade cidadeTrabalho;
  Cidade cidadeMoradia;
  Cliente({required this.id,required this.nome,required this.cidadeTrabalho, required this.cidadeMoradia});
}

class Fornecedor {
  int id;
  String nome;
  Cidade cidadeTrabalho;
    Cidade cidadeMoradia;
  Fornecedor({required this.id,required this.nome,required this.cidadeTrabalho, required this.cidadeMoradia});
}

class Venda {
  int id;
  Cliente cliente;
  Fornecedor fornecedor;
  Function calculoComissao;
  Venda({required this.id,required this.cliente,required this.fornecedor, required this.calculoComissao});
}
```





----------------------------------------------------------------------- Atividades --------------------------------------------------------------------------------------------------
----------------------------------------------------------------------- Modificadores de classes ------------------------------------------------------------------------------------



